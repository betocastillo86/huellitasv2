// <auto-generated />
using System;
using Huellitas.Data.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Huellitas.Data.Migrations
{
    [DbContext(typeof(HuellitasContext))]
    [Migration("20220424010315_UpdateDB")]
    partial class UpdateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("AlreadyOpened")
                        .HasColumnType("bit");

                    b.Property<Guid>("AutoreplyToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<short>("FamilyMembers")
                        .HasColumnType("smallint");

                    b.Property<string>("FamilyMembersAge")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("LastResponseUserId")
                        .HasColumnType("int");

                    b.Property<short?>("LastStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("ReponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_AdoptionForm");

                    b.HasIndex("ContentId");

                    b.HasIndex("JobId");

                    b.HasIndex("LastResponseUserId");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("AdoptionForms", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionFormAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("AdoptionFormId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_AdoptionFormAnswer");

                    b.HasIndex("AdoptionFormId");

                    b.HasIndex("UserId");

                    b.ToTable("AdoptionFormAnswers", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionFormAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdoptionFormId")
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id")
                        .HasName("PK_AdoptionFormAttribute");

                    b.HasIndex("AdoptionFormId");

                    b.HasIndex("AttributeId");

                    b.ToTable("AdoptionFormAttributes", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionFormUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdoptionFormId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_AdoptionFormUser");

                    b.HasIndex("AdoptionFormId");

                    b.HasIndex("UserId");

                    b.ToTable("AdoptionFormUsers", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<short>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("EmbedUrl")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<short>("SectionId")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PK_Banner");

                    b.HasIndex("FileId");

                    b.ToTable("Banners", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Category");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumComments")
                        .HasColumnType("int");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(1500)");

                    b.HasKey("Id")
                        .HasName("PK_Comment");

                    b.HasIndex("ContentId");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommentsCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Featured")
                        .HasColumnType("bit");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<short>("TypeId")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Views")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id")
                        .HasName("PK_Content");

                    b.HasIndex("FileId");

                    b.HasIndex("FriendlyName")
                        .IsUnique()
                        .HasFilter("[FriendlyName] IS NOT NULL");

                    b.HasIndex("LocationId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.HasIndex("Deleted", "TypeId", "Status", "ClosingDate");

                    b.ToTable("Contents", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id")
                        .HasName("PK_ContentAttribute");

                    b.HasIndex("Attribute");

                    b.HasIndex("ContentId");

                    b.ToTable("ContentAttributes", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ContentCategory");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ContentId");

                    b.ToTable("ContentCategories", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ContentFile");

                    b.HasIndex("ContentId");

                    b.HasIndex("FileId");

                    b.ToTable("ContentFiles", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContentId")
                        .HasColumnType("int")
                        .HasColumnName("ContentId");

                    b.Property<short>("RelationTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("RelationTypeId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id")
                        .HasName("PK_ContentUser");

                    b.HasIndex("ContentId");

                    b.HasIndex("UserId");

                    b.ToTable("ContentUsers", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.CustomTable", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_CustomTable");

                    b.ToTable("CustomTables", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.CustomTableRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("varchar(1500)");

                    b.Property<int>("CustomTableId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("ParentCustomTableRowId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_CustomTableRow");

                    b.HasIndex("CustomTableId");

                    b.HasIndex("ParentCustomTableRowId");

                    b.ToTable("CustomTableRows", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.EmailNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CC");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime");

                    b.Property<short>("SentTries")
                        .HasColumnType("smallint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ToName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_EmailNotification");

                    b.HasIndex("SentDate", "SentTries");

                    b.ToTable("EmailNotifications", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("PK_File");

                    b.ToTable("Files", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ParentLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Location");

                    b.HasIndex("ParentLocationId");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FullMessage");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("LogLevelId")
                        .HasColumnType("smallint");

                    b.Property<string>("PageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ShortMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShortMessage");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Log");

                    b.HasIndex("UserId");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailHtml")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("MobileText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SystemText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Tags")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Notification");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Permission");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.RelatedContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedContentId")
                        .HasColumnType("int");

                    b.Property<short>("RelationType")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PK_RelatedContent");

                    b.HasIndex("ContentId");

                    b.HasIndex("RelatedContentId");

                    b.ToTable("RelatedContents", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Role");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.RolePemission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_RolePemission");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePemissions", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.SystemNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("TargetUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TriggerUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id")
                        .HasName("PK_SystemNotification");

                    b.HasIndex("TriggerUserId");

                    b.HasIndex("UserId");

                    b.ToTable("SystemNotifications", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_SystemSetting");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_SystemSetting");

                    b.ToTable("SystemSettings", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.TextResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("LanguageId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_TextResource");

                    b.ToTable("TextResources", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FacebookId")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("IOsDeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordRecoveryToken")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_User");

                    b.HasIndex("LocationId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.SeoCrawling", b =>
                {
                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Html")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Url")
                        .HasName("PK_SeoCrawling");

                    b.ToTable("SeoCrawlings", (string)null);
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionForm", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("AdoptionForm")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionForm_Content1");

                    b.HasOne("Huellitas.Data.Entities.CustomTableRow", "Job")
                        .WithMany("AdoptionForm")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionForm_CustomTableRow");

                    b.HasOne("Huellitas.Data.Entities.User", "LastResponseUser")
                        .WithMany()
                        .HasForeignKey("LastResponseUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_AdoptionForm_User_LastResponse");

                    b.HasOne("Huellitas.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionForm_Location");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Content");

                    b.Navigation("Job");

                    b.Navigation("LastResponseUser");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionFormAnswer", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.AdoptionForm", "AdoptionForm")
                        .WithMany("Answers")
                        .HasForeignKey("AdoptionFormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionFormAnswer_AdoptionForm");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany("AdoptionFormAnswer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionFormAnswer_User");

                    b.Navigation("AdoptionForm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionFormAttribute", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.AdoptionForm", "AdoptionForm")
                        .WithMany("Attributes")
                        .HasForeignKey("AdoptionFormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionFormAttribute_AdoptionForm");

                    b.HasOne("Huellitas.Data.Entities.CustomTableRow", "Attribute")
                        .WithMany("AdoptionFormAttribute")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionFormAttribute_CustomTableRow");

                    b.Navigation("AdoptionForm");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionFormUser", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.AdoptionForm", "AdoptionForm")
                        .WithMany("Users")
                        .HasForeignKey("AdoptionFormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionFormUser_AdoptionForm");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AdoptionFormUser_User");

                    b.Navigation("AdoptionForm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Banner", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Banner_File");

                    b.Navigation("File");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Comment", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("Comments")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Comment_Content");

                    b.HasOne("Huellitas.Data.Entities.Comment", "ParentComment")
                        .WithMany("Children")
                        .HasForeignKey("ParentCommentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Comment_ParentComment");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Comment_User");

                    b.Navigation("Content");

                    b.Navigation("ParentComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Content", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.File", "File")
                        .WithMany("Content")
                        .HasForeignKey("FileId")
                        .HasConstraintName("FK_Content_File");

                    b.HasOne("Huellitas.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Content_Location");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany("Contents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Content_User");

                    b.Navigation("File");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentAttribute", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("ContentAttributes")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ContentAttribute_Content");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentCategory", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Category", "Category")
                        .WithMany("ContentCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ContentCategory_Category");

                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("ContentCategories")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ContentCategory_Content");

                    b.Navigation("Category");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentFile", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("ContentFiles")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ContentFile_Content");

                    b.HasOne("Huellitas.Data.Entities.File", "File")
                        .WithMany("ContentFile")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ContentFile_File");

                    b.Navigation("Content");

                    b.Navigation("File");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.ContentUser", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("Users")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ContentUser_Content");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ContentUser_User");

                    b.Navigation("Content");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.CustomTableRow", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.CustomTable", "CustomTable")
                        .WithMany("CustomTableRow")
                        .HasForeignKey("CustomTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CustomTableRow_CustomTable");

                    b.HasOne("Huellitas.Data.Entities.CustomTableRow", "ParentCustomTableRow")
                        .WithMany()
                        .HasForeignKey("ParentCustomTableRowId");

                    b.Navigation("CustomTable");

                    b.Navigation("ParentCustomTableRow");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Location", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Location", "ParentLocation")
                        .WithMany("ChildrenLocations")
                        .HasForeignKey("ParentLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Location_Location_ParentLocationId");

                    b.Navigation("ParentLocation");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Log", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Log_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.RelatedContent", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Content", "Content")
                        .WithMany("RelatedContentContent")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RelatedContent_Content");

                    b.HasOne("Huellitas.Data.Entities.Content", "RelatedContentNavigation")
                        .WithMany("RelatedContentRelatedContentNavigation")
                        .HasForeignKey("RelatedContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RelatedContent_Content1");

                    b.Navigation("Content");

                    b.Navigation("RelatedContentNavigation");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.RolePemission", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Permission", "Permission")
                        .WithMany("RolePemission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolePemission_Permission");

                    b.HasOne("Huellitas.Data.Entities.Role", "Role")
                        .WithMany("RolePemissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolePemission_Role");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.SystemNotification", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.User", "TriggerUser")
                        .WithMany()
                        .HasForeignKey("TriggerUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_SystemNotification_TriggerUser");

                    b.HasOne("Huellitas.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SystemNotification_User");

                    b.Navigation("TriggerUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.User", b =>
                {
                    b.HasOne("Huellitas.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_User_Location");

                    b.HasOne("Huellitas.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Location");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.AdoptionForm", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Attributes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Category", b =>
                {
                    b.Navigation("ContentCategory");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Comment", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Content", b =>
                {
                    b.Navigation("AdoptionForm");

                    b.Navigation("Comments");

                    b.Navigation("ContentAttributes");

                    b.Navigation("ContentCategories");

                    b.Navigation("ContentFiles");

                    b.Navigation("RelatedContentContent");

                    b.Navigation("RelatedContentRelatedContentNavigation");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.CustomTable", b =>
                {
                    b.Navigation("CustomTableRow");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.CustomTableRow", b =>
                {
                    b.Navigation("AdoptionForm");

                    b.Navigation("AdoptionFormAttribute");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.File", b =>
                {
                    b.Navigation("Content");

                    b.Navigation("ContentFile");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Location", b =>
                {
                    b.Navigation("ChildrenLocations");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Permission", b =>
                {
                    b.Navigation("RolePemission");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.Role", b =>
                {
                    b.Navigation("RolePemissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Huellitas.Data.Entities.User", b =>
                {
                    b.Navigation("AdoptionFormAnswer");

                    b.Navigation("Comments");

                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
